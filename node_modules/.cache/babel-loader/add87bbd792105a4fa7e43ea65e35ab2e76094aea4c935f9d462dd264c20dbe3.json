{"ast":null,"code":"import _objectSpread from\"/Users/lenavasilev/Desktop/n8n_assistant_v01/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{supabase}from'../lib/supabase';import{mockAskAssistant}from'../lib/openai';import{ChatList}from'../components/ChatList';import{ChatInterface}from'../components/ChatInterface';import{MatrixBackground}from'../components/MatrixBackground';import{MarketplacePage}from'./MarketplacePage';import{LogOut}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ChatPage=_ref=>{let{onLogout}=_ref;const[chats,setChats]=useState([]);const[selectedChat,setSelectedChat]=useState(null);const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[user,setUser]=useState(null);const[showMarketplace,setShowMarketplace]=useState(false);useEffect(()=>{// Get current user\nconst getUser=async()=>{const{data:{user}}=await supabase.auth.getUser();setUser(user);if(user){fetchChats(user.id);}};getUser();// Listen for auth changes\nconst{data:{subscription}}=supabase.auth.onAuthStateChange(async(event,session)=>{if(session!==null&&session!==void 0&&session.user){setUser(session.user);fetchChats(session.user.id);}else{setUser(null);onLogout();}});return()=>subscription.unsubscribe();},[onLogout]);const fetchChats=async userId=>{try{const{data,error}=await supabase.from('chats').select('*').eq('user_id',userId).order('updated_at',{ascending:false});if(error)throw error;setChats(data||[]);}catch(error){console.error('Error fetching chats:',error);}};const fetchMessages=async chatId=>{try{const{data,error}=await supabase.from('messages').select('*').eq('chat_id',chatId).order('created_at',{ascending:true});if(error)throw error;setMessages(data||[]);}catch(error){console.error('Error fetching messages:',error);}};const createChat=async()=>{if(!user)return;try{const{data,error}=await supabase.from('chats').insert({user_id:user.id,title:'New Chat'}).select().single();if(error)throw error;setChats(prev=>[data,...prev]);setSelectedChat(data);setMessages([]);}catch(error){console.error('Error creating chat:',error);}};const deleteChat=async chatId=>{try{const{error}=await supabase.from('chats').delete().eq('id',chatId);if(error)throw error;setChats(prev=>prev.filter(chat=>chat.id!==chatId));if((selectedChat===null||selectedChat===void 0?void 0:selectedChat.id)===chatId){setSelectedChat(null);setMessages([]);}}catch(error){console.error('Error deleting chat:',error);}};const selectChat=chat=>{setSelectedChat(chat);fetchMessages(chat.id);};const sendMessage=async content=>{if(!selectedChat||!user)return;setLoading(true);try{// Add user message to database\nconst{data:userMessage,error:userError}=await supabase.from('messages').insert({chat_id:selectedChat.id,role:'user',content}).select().single();if(userError)throw userError;// Update chat title if it's the first message\nif(messages.length===0){const{error:updateError}=await supabase.from('chats').update({title:content.slice(0,50)+(content.length>50?'...':'')}).eq('id',selectedChat.id);if(updateError)throw updateError;setChats(prev=>prev.map(chat=>chat.id===selectedChat.id?_objectSpread(_objectSpread({},chat),{},{title:content.slice(0,50)+(content.length>50?'...':'')}):chat));}// Get assistant response\nconst response=await mockAskAssistant(content);// Use mockAskAssistant for now\nif(response.success&&response.message){// Add assistant message to database\nconst{error:assistantError}=await supabase.from('messages').insert({chat_id:selectedChat.id,role:'assistant',content:response.message});if(assistantError)throw assistantError;// Update chat's updated_at timestamp\nawait supabase.from('chats').update({updated_at:new Date().toISOString()}).eq('id',selectedChat.id);// Refresh messages and chats\nfetchMessages(selectedChat.id);fetchChats(user.id);}else{throw new Error(response.error||'Failed to get response');}}catch(error){console.error('Error sending message:',error);}finally{setLoading(false);}};const handleLogout=async()=>{await supabase.auth.signOut();onLogout();};const handleOpenMarketplace=()=>{setShowMarketplace(true);};const handleBackFromMarketplace=()=>{setShowMarketplace(false);};if(showMarketplace){return/*#__PURE__*/_jsx(MarketplacePage,{onBack:handleBackFromMarketplace});}return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex relative perspective-3d\",children:[/*#__PURE__*/_jsx(MatrixBackground,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute inset-0 pointer-events-none\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1/6 left-1/6 w-2 h-2 bg-blue-400 rounded-full opacity-10 animate-3d-float\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-1/3 right-1/4 w-1 h-1 bg-purple-400 rounded-full opacity-15 animate-3d-float\",style:{animationDelay:'3s'}}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-1/4 left-1/3 w-1.5 h-1.5 bg-cyan-400 rounded-full opacity-12 animate-3d-float\",style:{animationDelay:'6s'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative z-10 flex flex-1\",children:[/*#__PURE__*/_jsx(ChatList,{chats:chats,selectedChatId:(selectedChat===null||selectedChat===void 0?void 0:selectedChat.id)||null,onSelectChat:selectChat,onCreateChat:createChat,onDeleteChat:deleteChat,onOpenMarketplace:handleOpenMarketplace}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-b border-border bg-muted/20 backdrop-blur-sm flex items-center justify-between\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-semibold font-fira\",children:\"AI Chat Assistant\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-muted-foreground font-fira\",children:user===null||user===void 0?void 0:user.email}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleLogout,className:\"btn-secondary flex items-center gap-2 font-fira\",children:[/*#__PURE__*/_jsx(LogOut,{className:\"w-4 h-4\"}),\"Logout\"]})]})]}),selectedChat?/*#__PURE__*/_jsx(ChatInterface,{messages:messages,onSendMessage:sendMessage,loading:loading,chatTitle:selectedChat.title}):/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex items-center justify-center text-muted-foreground\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center animate-3d-float\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium mb-2 font-fira\",children:\"Select a chat or start a new one\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-fira\",children:\"Choose from your existing conversations or create a new one\"})]})})]})]})]});};","map":{"version":3,"names":["React","useState","useEffect","supabase","mockAskAssistant","ChatList","ChatInterface","MatrixBackground","MarketplacePage","LogOut","jsx","_jsx","jsxs","_jsxs","ChatPage","_ref","onLogout","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","loading","setLoading","user","setUser","showMarketplace","setShowMarketplace","getUser","data","auth","fetchChats","id","subscription","onAuthStateChange","event","session","unsubscribe","userId","error","from","select","eq","order","ascending","console","fetchMessages","chatId","createChat","insert","user_id","title","single","prev","deleteChat","delete","filter","chat","selectChat","sendMessage","content","userMessage","userError","chat_id","role","length","updateError","update","slice","map","_objectSpread","response","success","message","assistantError","updated_at","Date","toISOString","Error","handleLogout","signOut","handleOpenMarketplace","handleBackFromMarketplace","onBack","className","children","style","animationDelay","selectedChatId","onSelectChat","onCreateChat","onDeleteChat","onOpenMarketplace","email","onClick","onSendMessage","chatTitle"],"sources":["/Users/lenavasilev/Desktop/n8n_assistant_v01/src/pages/ChatPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { supabase, Chat, Message } from '../lib/supabase'\nimport { askAssistant, mockAskAssistant } from '../lib/openai'\nimport { ChatList } from '../components/ChatList'\nimport { ChatInterface } from '../components/ChatInterface'\nimport { MatrixBackground } from '../components/MatrixBackground'\nimport { MarketplacePage } from './MarketplacePage'\nimport { LogOut, Loader2 } from 'lucide-react'\n\ninterface ChatPageProps {\n  onLogout: () => void\n}\n\nexport const ChatPage: React.FC<ChatPageProps> = ({ onLogout }) => {\n  const [chats, setChats] = useState<Chat[]>([])\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null)\n  const [messages, setMessages] = useState<Message[]>([])\n  const [loading, setLoading] = useState(false)\n  const [user, setUser] = useState<any>(null)\n  const [showMarketplace, setShowMarketplace] = useState(false)\n\n  useEffect(() => {\n    // Get current user\n    const getUser = async () => {\n      const { data: { user } } = await supabase.auth.getUser()\n      setUser(user)\n      if (user) {\n        fetchChats(user.id)\n      }\n    }\n    getUser()\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      async (event, session) => {\n        if (session?.user) {\n          setUser(session.user)\n          fetchChats(session.user.id)\n        } else {\n          setUser(null)\n          onLogout()\n        }\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [onLogout])\n\n  const fetchChats = async (userId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .select('*')\n        .eq('user_id', userId)\n        .order('updated_at', { ascending: false })\n\n      if (error) throw error\n      setChats(data || [])\n    } catch (error) {\n      console.error('Error fetching chats:', error)\n    }\n  }\n\n  const fetchMessages = async (chatId: string) => {\n    try {\n      const { data, error } = await supabase\n        .from('messages')\n        .select('*')\n        .eq('chat_id', chatId)\n        .order('created_at', { ascending: true })\n\n      if (error) throw error\n      setMessages(data || [])\n    } catch (error) {\n      console.error('Error fetching messages:', error)\n    }\n  }\n\n  const createChat = async () => {\n    if (!user) return\n\n    try {\n      const { data, error } = await supabase\n        .from('chats')\n        .insert({\n          user_id: user.id,\n          title: 'New Chat',\n        })\n        .select()\n        .single()\n\n      if (error) throw error\n\n      setChats(prev => [data, ...prev])\n      setSelectedChat(data)\n      setMessages([])\n    } catch (error) {\n      console.error('Error creating chat:', error)\n    }\n  }\n\n  const deleteChat = async (chatId: string) => {\n    try {\n      const { error } = await supabase\n        .from('chats')\n        .delete()\n        .eq('id', chatId)\n\n      if (error) throw error\n\n      setChats(prev => prev.filter(chat => chat.id !== chatId))\n      \n      if (selectedChat?.id === chatId) {\n        setSelectedChat(null)\n        setMessages([])\n      }\n    } catch (error) {\n      console.error('Error deleting chat:', error)\n    }\n  }\n\n  const selectChat = (chat: Chat) => {\n    setSelectedChat(chat)\n    fetchMessages(chat.id)\n  }\n\n  const sendMessage = async (content: string) => {\n    if (!selectedChat || !user) return\n\n    setLoading(true)\n\n    try {\n      // Add user message to database\n      const { data: userMessage, error: userError } = await supabase\n        .from('messages')\n        .insert({\n          chat_id: selectedChat.id,\n          role: 'user',\n          content,\n        })\n        .select()\n        .single()\n\n      if (userError) throw userError\n\n      // Update chat title if it's the first message\n      if (messages.length === 0) {\n        const { error: updateError } = await supabase\n          .from('chats')\n          .update({ title: content.slice(0, 50) + (content.length > 50 ? '...' : '') })\n          .eq('id', selectedChat.id)\n\n        if (updateError) throw updateError\n\n        setChats(prev => prev.map(chat => \n          chat.id === selectedChat.id \n            ? { ...chat, title: content.slice(0, 50) + (content.length > 50 ? '...' : '') }\n            : chat\n        ))\n      }\n\n      // Get assistant response\n      const response = await mockAskAssistant(content) // Use mockAskAssistant for now\n\n      if (response.success && response.message) {\n        // Add assistant message to database\n        const { error: assistantError } = await supabase\n          .from('messages')\n          .insert({\n            chat_id: selectedChat.id,\n            role: 'assistant',\n            content: response.message,\n          })\n\n        if (assistantError) throw assistantError\n\n        // Update chat's updated_at timestamp\n        await supabase\n          .from('chats')\n          .update({ updated_at: new Date().toISOString() })\n          .eq('id', selectedChat.id)\n\n        // Refresh messages and chats\n        fetchMessages(selectedChat.id)\n        fetchChats(user.id)\n      } else {\n        throw new Error(response.error || 'Failed to get response')\n      }\n    } catch (error) {\n      console.error('Error sending message:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut()\n    onLogout()\n  }\n\n  const handleOpenMarketplace = () => {\n    setShowMarketplace(true)\n  }\n\n  const handleBackFromMarketplace = () => {\n    setShowMarketplace(false)\n  }\n\n  if (showMarketplace) {\n    return <MarketplacePage onBack={handleBackFromMarketplace} />\n  }\n\n  return (\n    <div className=\"h-screen flex relative perspective-3d\">\n      <MatrixBackground />\n      \n      {/* Subtle floating elements for chat page */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        <div className=\"absolute top-1/6 left-1/6 w-2 h-2 bg-blue-400 rounded-full opacity-10 animate-3d-float\"></div>\n        <div className=\"absolute top-1/3 right-1/4 w-1 h-1 bg-purple-400 rounded-full opacity-15 animate-3d-float\" style={{ animationDelay: '3s' }}></div>\n        <div className=\"absolute bottom-1/4 left-1/3 w-1.5 h-1.5 bg-cyan-400 rounded-full opacity-12 animate-3d-float\" style={{ animationDelay: '6s' }}></div>\n      </div>\n      \n      <div className=\"relative z-10 flex flex-1\">\n        <ChatList\n          chats={chats}\n          selectedChatId={selectedChat?.id || null}\n          onSelectChat={selectChat}\n          onCreateChat={createChat}\n          onDeleteChat={deleteChat}\n          onOpenMarketplace={handleOpenMarketplace}\n        />\n\n        <div className=\"flex-1 flex flex-col\">\n          {/* Header */}\n          <div className=\"p-4 border-b border-border bg-muted/20 backdrop-blur-sm flex items-center justify-between\">\n            <h1 className=\"text-xl font-semibold font-fira\">AI Chat Assistant</h1>\n            <div className=\"flex items-center gap-4\">\n              <span className=\"text-sm text-muted-foreground font-fira\">\n                {user?.email}\n              </span>\n              <button\n                onClick={handleLogout}\n                className=\"btn-secondary flex items-center gap-2 font-fira\"\n              >\n                <LogOut className=\"w-4 h-4\" />\n                Logout\n              </button>\n            </div>\n          </div>\n\n          {/* Chat Interface */}\n          {selectedChat ? (\n            <ChatInterface\n              messages={messages}\n              onSendMessage={sendMessage}\n              loading={loading}\n              chatTitle={selectedChat.title}\n            />\n          ) : (\n            <div className=\"flex-1 flex items-center justify-center text-muted-foreground\">\n              <div className=\"text-center animate-3d-float\">\n                <h3 className=\"text-lg font-medium mb-2 font-fira\">Select a chat or start a new one</h3>\n                <p className=\"text-sm font-fira\">Choose from your existing conversations or create a new one</p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}